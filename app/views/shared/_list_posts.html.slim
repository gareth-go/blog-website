- posts.each_with_index do |post, index|
  = turbo_frame_tag dom_id(post)
    .mb-2.pb-2.bg-white.border.rounded.shadow-sm  data-controller="posts"
      - if post.pending?
        .px-4.pt-2.text-warning
          | Pending
      - if post.rejected?
        .px-4.pt-2.text-danger
          | Rejected
      = cover_image_if_first_post(page, post, index == 0)
      .py-2.px-4
        .fs-6.text-secondary
          = link_to user_path(post.user.username), data: { turbo_frame: :_top }, class: "text-decoration-none text-secondary" do
            = render partial: "shared/post_username_link", locals: { post: post }
          - if policy(post).destroy?
            = render "shared/post_action", post: post
        small.text-secondary
          = post.created_at.to_date.to_fs(:long)
      .pb-2.px-4
        = link_to post.title, post, data: { turbo_frame: :_top }, class: "fs-2 text-black fw-bold text-decoration-none"
      .pb-2.px-4
        = render partial: "shared/post_tags_link", locals: { post: post }
      .pb-2.px-3
        - if post.reactions.present?
          = link_to post, data: { turbo_frame: :_top }, class: "text-decoration-none text-reset menu-link py-2 px-2 rounded" do
            = render "shared/reactions",
                    icon_src: "media/images/like-icon.svg",
                    count: post.reactions.select(&:like?).size
            = render "shared/reactions",
                    icon_src: "media/images/unicorn-icon.svg",
                    count: post.reactions.select(&:unicorn?).size
            = render "shared/reactions",
                    icon_src: "media/images/exploding_head-icon.svg",
                    count: post.reactions.select(&:exploding_head?).size
            = render "shared/reactions",
                    icon_src: "media/images/raised_hand-icon.svg",
                    count: post.reactions.select(&:raised_hand?).size
            = render "shared/reactions",
                    icon_src: "media/images/fire-icon.svg",
                    count: post.reactions.select(&:fire?).size
            small.ms-1.align-bottom
              = post.reactions.size
              |  Reactions 
        = link_to post_path(post) + "#comments", data: { turbo_frame: :_top }, class: "text-decoration-none text-reset menu-link py-2 px-2 rounded" do
          = image_pack_tag "media/images/comment-icon.svg", size: "20x20"
          small.ms-1.align-bottom
            - if post.comments.size > 0
              = post.comments_count
              |  Comments
            - else 
              | Add comments
.p-0 id="load-more"
